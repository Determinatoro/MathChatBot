<Application x:Class="MathChatBot.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MathChatBot"
             xmlns:core="clr-namespace:System;assembly=mscorlib"
             StartupUri="Windows\MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#33002456"/>

        <SolidColorBrush x:Key="AUU_Blue" Color="#002456"/>
        <SolidColorBrush x:Key="AAU_DarkBlue" Color="#FF001636"/>
        <SolidColorBrush x:Key="UserMessageColor" Color="#002456"/>
        <SolidColorBrush x:Key="UserMessageTextColor" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="BotMessageColor" Color="#D0D0D0"/>
        <SolidColorBrush x:Key="BotMessageTextColor" Color="#000000"/>
        <SolidColorBrush x:Key="BorderColor" Color="#202020"/>

        <Geometry x:Key="closeGeometry">
            F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z
        </Geometry>
        <Geometry x:Key="minimizeGeometry">
            M0,0 L8,0 8,1 8,2 0,2 0,1 z
        </Geometry>
        <Geometry x:Key="maximizeGeometry">
            F1 M 34,17L 43,17L 43,23L 34,23L 34,17 Z M 35,19L 35,22L 42,22L 42,19L 35,19 Z
        </Geometry>
        <Geometry x:Key="restoreGeometry">
            M1,4.9996096 L1,7.000219 7,6.999219 7,5.001 2,5.001 2,4.9996096 z M3,2.0014141 L3,3.0000001 8,3.0000001 8,4.0000001 8,4.0008045 9,4.0008045 9,2.0014141 z M2,0 L10,0 10,0.0010234118 10,1.0000001 10,5.001 8,5.001 8,7.9990235 0,8.0000239 0,4.0000001 0,3.0009998 0,3.0000001 2,3.0000001 2,1.0000001 2,0.0010234118 z
        </Geometry>

        <!--#region STYLE SCROLLBAR-->

        <!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <!--BACKGROUND-->
                        <Border 
                            Name="background"
                            Margin="0"
                            CornerRadius="1"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            >
                            <!--ARROW-->
                            <Path 
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{TemplateBinding Foreground}"
                                Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" 
                                />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--IsEnabled-->
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="#00F0F0F0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged up/down or left/right-->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border                             
                            Margin="0"  
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- VerticalScrollBar Template using the previously created Templates -->
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="30"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="30"/>
                </Grid.RowDefinitions>

                <!--Upper Button-->
                <RepeatButton 
                    Grid.Row="0"
                    Style="{StaticResource ScrollBarLineButton}"
                    Height="30"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Foreground="{TemplateBinding Foreground}"
                    Background="{TemplateBinding Background}"
                    Command="ScrollBar.LineUpCommand"
                    Content="M 0 4 L 8 4 L 4 0 Z"
                    />

                <!--THUMB-->
                <Track 
                    Name="PART_Track"
                    Grid.Row="1"
                    IsDirectionReversed="true"
                    >
                    <!--DECREASE-->
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                          Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>

                    <Track.Thumb>
                        <Thumb 
                            Style="{StaticResource ScrollBarThumb}"          
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            />
                    </Track.Thumb>
                    <!--INCREASE-->
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                          Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>

                <!--Lower Button-->
                <RepeatButton 
                    Grid.Row="3"
                    Style="{StaticResource ScrollBarLineButton}"
                    Height="30"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Foreground="{TemplateBinding Foreground}"
                    Background="{TemplateBinding Background}"
                    Command="ScrollBar.LineDownCommand"
                    Content="M 0 0 L 4 4 L 8 0 Z"
                    />
            </Grid>
        </ControlTemplate>

        <!-- HorizontalScrollBar Template using the previously created Templates -->
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>

                <!--LEFT BUTTON-->
                <RepeatButton 
                    Grid.Column="0"
                    Style="{StaticResource ScrollBarLineButton}"
                    Width="18"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Foreground="{TemplateBinding Foreground}"
                    Background="{TemplateBinding Background}"
                    Command="ScrollBar.LineLeftCommand"
                    Content="M 4 0 L 4 8 L 0 4 Z" 
                    />

                <!--THUMB-->
                <Track 
                    Name="PART_Track"
                    Grid.Column="1"
                    IsDirectionReversed="False"
                    >
                    <!--DECREASE-->
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                          Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb 
                            Style="{StaticResource ScrollBarThumb}"          
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            />
                    </Track.Thumb>
                    <!--INCREASE-->
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
                            Style="{StaticResource ScrollBarPageButton}"
                            Command="ScrollBar.PageRightCommand" 
                            />
                    </Track.IncreaseRepeatButton>
                </Track>

                <!--RIGHT BUTTON-->
                <RepeatButton 
                    Grid.Column="3"
                    Style="{StaticResource ScrollBarLineButton}"
                    Width="18"    
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Foreground="{TemplateBinding Foreground}"
                    Command="ScrollBar.LineRightCommand"
                    Content="M 0 0 L 4 4 L 0 8 Z"
                    />
            </Grid>
        </ControlTemplate>

        <!--#endregion-->

        <!--#region STYLE TAB CONTROL-->

        <Style x:Key="styleTabControl" TargetType="{x:Type TabControl}">
            <Setter Property="TabStripPlacement" Value="Left" />
            <Setter Property="Background" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Name="ColumnDefinition0" />
                                <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" Name="RowDefinition0" />
                                <RowDefinition Height="*" Name="RowDefinition1" />
                            </Grid.RowDefinitions>

                            <!--HEADER BORDER-->
                            <Border 
                                x:Name="HeaderBorder" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1" 
                                CornerRadius="2" 
                                Background="{TemplateBinding Background}"
                                Margin="0"
                                Width="90"
                                >
                                <!--TAB PANEL-->
                                <TabPanel 
                                    IsItemsHost="True"
                                    Name="HeaderPanel" 
                                    Panel.ZIndex="1" 
                                    KeyboardNavigation.TabIndex="1"
                                    Grid.Column="0" 
                                    Grid.Row="0" 
                                    />
                            </Border>

                            <!--CONTENT PANEL-->
                            <Grid 
                                Name="ContentPanel" 
                                KeyboardNavigation.TabIndex="2" 
                                KeyboardNavigation.TabNavigation="Local" 
                                KeyboardNavigation.DirectionalNavigation="Contained" 
                                Grid.Column="0" 
                                Grid.Row="1"
                                >
                                <!--BACKGROUND-->
                                <Border 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2" 
                                    Margin="0"
                                    >
                                    <!--CONTENT-->
                                    <ContentPresenter 
                                        Content="{TemplateBinding SelectedContent}" 
                                        ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
                                        ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" 
                                        ContentSource="SelectedContent" 
                                        Name="PART_SelectedContentHost" 
                                        Margin="2" 
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
                                        />
                                </Border>
                            </Grid>
                        </Grid>

                        <!--TRIGGERS-->
                        <ControlTemplate.Triggers>
                            <!--TAB ITEMS BOTTOM-->
                            <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                                <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
                                <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="0,5,0,0" />
                            </Trigger>
                            <!--TAB ITEMS LEFT-->
                            <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                                <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                                <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
                                <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
                                <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                                <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                                <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="0,0,2,0" />
                            </Trigger>
                            <!--TAB ITEMS RIGHT-->
                            <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                                <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                                <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
                                <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
                                <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                                <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                                <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="5,0,0,0" />
                            </Trigger>
                            <!--IsEnabled false-->
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->
        
        <!--#region STYLE TAB ITEM-->

        <Style x:Key="styleTabItem" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">

                        <!--ITEM and CONTENT-->
                        <Border 
                            x:Name="background"
                            Background="{StaticResource AUU_Blue}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="1"
                            Margin="{TemplateBinding Margin}"
                            >

                            <!--CONTENT-->
                            <ContentPresenter 
                                x:Name="ContentSite"
                                ContentSource="Header"                                            
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                TextBlock.FontSize="{TemplateBinding FontSize}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                />
                        </Border>

                        <!--TRIGGERS-->
                        <ControlTemplate.Triggers>
                            <Trigger 
                                Property="IsSelected" 
                                Value="True"
                                >
                                <Setter 
                                    TargetName="background"
                                    Property="Background"
                                    Value="{StaticResource AAU_DarkBlue}" 
                                    />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->

        <!--#region STYLE ListBoxItem-->

        <Style x:Key="styleNoHover" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->
        
        <!--#region STYLE PasswordBox-->

        <Style x:Key="styleCustomPasswordBox" TargetType="{x:Type PasswordBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">

                        <!--ROOT GRID-->
                        <Grid>
                            <!--BACKGROUND-->
                            <Border 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                CornerRadius="1"
                                Margin="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                />

                            <!--TEXT-->
                            <ScrollViewer 
                                x:Name="PART_ContentHost" 
                                Margin="0,0,0,0" 
                                VerticalAlignment="Center" 
                                TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                TextBlock.FontSize="{TemplateBinding FontSize}"
                                />
                        </Grid>

                        <!--TRIGGERS-->
                        <ControlTemplate.Triggers>
                            <!--IsEnabled false-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->

        <!--#region STYLE TextBox-->

        <!-- Style with water mark -->
        <Style x:Key="styleWaterMark" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">

                        <!--ROOT GRID-->
                        <Grid>
                            <!--BACKGROUND-->
                            <Border 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                CornerRadius="1"
                                Margin="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                />

                            <!--TEXT-->
                            <ScrollViewer 
                                x:Name="PART_ContentHost" 
                                Margin="0,0,0,0" 
                                VerticalAlignment="Center" 
                                TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                TextBlock.FontSize="{TemplateBinding FontSize}"
                                />

                            <!--HINT-->
                            <Label 
                                Margin="3,0,0,0" 
                                Cursor="IBeam"
                                x:Name="WaterMarkLabel"
                                Content="{TemplateBinding Tag}" 
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                Visibility="Collapsed" 
                                Foreground="Gray" 
                                FontFamily="{TemplateBinding FontFamily}"
                                />
                        </Grid>

                        <!--TRIGGERS-->
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <!--Text = ""-->
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter 
                                    Property="Visibility" 
                                    TargetName="WaterMarkLabel" 
                                    Value="Visible"
                                    />
                            </MultiTrigger>
                            <!--IsEnabled false-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray"/>
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="Foreground" Value="DimGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->

        <!--#region STYLE Button-->

        <Style x:Key="styleButtonHeader" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <!--STORYBOARDS-->
                            <Storyboard x:Key="Timeline1">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Timeline2">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>

                        <!--ROOT GRID-->
                        <Grid 
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}"
                            ClipToBounds="True"
                            >

                            <!--BACKGROUND-->
                            <Rectangle Name="background" 
                                       HorizontalAlignment="Stretch" 
                                       VerticalAlignment="Stretch" 
                                       Fill="{TemplateBinding Background}" 
                                       />

                            <!--GLOW-->
                            <Border 
                                Opacity="0"
                                HorizontalAlignment="Stretch"
                                x:Name="glow" 
                                Width="Auto" 
                                Grid.RowSpan="2" 
                                Background="#AAFFFFFF"
                                />

                            <!--TEXT-->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter 
                                    x:Name="myContentPresenter" 
                                    Margin="0, 0, 0, 0"                                    
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Center"                                 
                                    TextBlock.Foreground="{TemplateBinding Foreground}" 
                                    TextBlock.FontFamily="{TemplateBinding FontFamily}" 
                                    TextBlock.FontWeight="{TemplateBinding FontWeight}"                                 
                                    TextBlock.FontSize="{TemplateBinding FontSize}"
                                    Content="{TemplateBinding Content}"
                                    >
                                </ContentPresenter>
                            </DockPanel>
                        </Grid>

                        <!--TRIGGERS-->
                        <ControlTemplate.Triggers>
                            <!--IsPressed-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="glow" Property="Background" Value="#D0FFFFFF"/>
                            </Trigger>
                            <!--IsMouseOver-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                                </Trigger.EnterActions>
                                <!--EXIT fra MouseOver-->
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="styleButtonMinimize" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <!--STORYBOARDS-->
                            <Storyboard x:Key="Timeline1">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Timeline2">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>

                        <!--ROOT GRID-->
                        <Grid 
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}"
                            ClipToBounds="True"
                            >

                            <!--BACKGROUND-->
                            <Rectangle Name="background" 
                                       HorizontalAlignment="Stretch" 
                                       VerticalAlignment="Stretch" 
                                       Fill="{TemplateBinding Background}" 
                                       />

                            <!--GLOW-->
                            <Border 
                                Opacity="0"
                                HorizontalAlignment="Stretch"
                                x:Name="glow" 
                                Width="Auto" 
                                Grid.RowSpan="2" 
                                Background="#AAFFFFFF"
                                />

                            <!--TEXT-->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter 
                                    x:Name="myContentPresenter" 
                                    Margin="0, 0, 0, 0"                                    
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Center"                                 
                                    TextBlock.Foreground="{TemplateBinding Foreground}" 
                                    TextBlock.FontFamily="{TemplateBinding FontFamily}" 
                                    TextBlock.FontWeight="{TemplateBinding FontWeight}"                                 
                                    TextBlock.FontSize="{TemplateBinding FontSize}"
                                    >
                                    <ContentPresenter.Content>
                                        <Path Margin="0,8,0,0" HorizontalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="{StaticResource minimizeGeometry}" />
                                    </ContentPresenter.Content>
                                </ContentPresenter>
                            </DockPanel>
                        </Grid>

                        <!--TRIGGERS-->
                        <ControlTemplate.Triggers>
                            <!--IsPressed-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="glow" Property="Background" Value="#D0FFFFFF"/>
                            </Trigger>
                            <!--IsMouseOver-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                                </Trigger.EnterActions>
                                <!--EXIT fra MouseOver-->
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="styleButtonClose" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <!--STORYBOARDS-->
                            <Storyboard x:Key="Timeline1">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Timeline2">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>

                        <!--ROOT GRID-->
                        <Grid 
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}"
                            ClipToBounds="True"
                            >

                            <!--BACKGROUND-->
                            <Rectangle Name="background" 
                                       HorizontalAlignment="Stretch" 
                                       VerticalAlignment="Stretch" 
                                       Fill="{TemplateBinding Background}" 
                                       />

                            <!--GLOW-->
                            <Border 
                                Opacity="0"
                                HorizontalAlignment="Stretch"
                                x:Name="glow" 
                                Width="Auto" 
                                Grid.RowSpan="2" 
                                Background="#AAFF0000"
                                />

                            <!--TEXT-->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter 
                                    x:Name="myContentPresenter" 
                                    Margin="0, 0, 0, 0"                                    
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Center"                                 
                                    TextBlock.Foreground="{TemplateBinding Foreground}" 
                                    TextBlock.FontFamily="{TemplateBinding FontFamily}" 
                                    TextBlock.FontWeight="{TemplateBinding FontWeight}"                                 
                                    TextBlock.FontSize="{TemplateBinding FontSize}"
                                    >
                                    <ContentPresenter.Content>
                                        <Path Width="10" Height="10" Margin="0, 0, 0, 0" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="{StaticResource closeGeometry}" />
                                    </ContentPresenter.Content>
                                </ContentPresenter>
                            </DockPanel>
                        </Grid>

                        <!--TRIGGERS-->
                        <ControlTemplate.Triggers>
                            <!--IsPressed-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="glow" Property="Background" Value="#D0FF0000"/>
                            </Trigger>
                            <!--IsMouseOver-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                                </Trigger.EnterActions>
                                <!--EXIT fra MouseOver-->
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Style with hover effect -->
        <Style x:Key="styleButtonHover" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <!--STORYBOARDS-->
                            <Storyboard x:Key="Timeline1">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Timeline2">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>

                        <!--ROOT GRID-->
                        <Grid 
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}"
                            ClipToBounds="True"
                            >

                            <!--BACKGROUND-->
                            <Rectangle Name="background" 
                                       HorizontalAlignment="Stretch" 
                                       VerticalAlignment="Stretch" 
                                       Stroke="{TemplateBinding BorderBrush}" 
                                       StrokeThickness="1"
                                       Fill="{TemplateBinding Background}" 
                                       RadiusX="1" 
                                       RadiusY="1" 
                                       />

                            <!--GLOW-->
                            <Border 
                                Opacity="0"
                                HorizontalAlignment="Stretch"
                                x:Name="glow" 
                                Margin="1"
                                Width="Auto" 
                                Grid.RowSpan="2" 
                                CornerRadius="1"
                                >
                                <Border.Background>
                                    <RadialGradientBrush>
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1.702" ScaleY="5.243"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="-0.368" Y="-0.152"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#B2FFFFFF" Offset="0"/>
                                        <GradientStop Color="#00FFFFFF" Offset="1"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                            </Border>

                            <!--TEXT-->
                            <ContentPresenter 
                                    x:Name="myContentPresenter" 
                                    Margin="{TemplateBinding Padding}"                                    
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Center"                                 
                                    Content="{TemplateBinding Content}" 
                                    TextBlock.Foreground="{TemplateBinding Foreground}" 
                                    TextBlock.FontFamily="{TemplateBinding FontFamily}" 
                                    TextBlock.FontWeight="{TemplateBinding FontWeight}"                                 
                                    TextBlock.FontSize="{TemplateBinding FontSize}"
                                    />
                        </Grid>

                        <!--TRIGGERS-->
                        <ControlTemplate.Triggers>
                            <!--IsPressed-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="background" Property="Fill" Value="{StaticResource ResourceKey=AAU_DarkBlue}"/>
                            </Trigger>
                            <!--IsEnabled false-->
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="background" Property="Fill" Value="{StaticResource ResourceKey=BotMessageColor}"/>
                            </Trigger>
                            <!--IsFocused true-->
                            <!--<Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="background" Property="Fill" Value="White"/>
                                <Setter TargetName="myContentPresenter" Property="TextBlock.Foreground" Value="Black"/>
                            </Trigger>-->
                            <!--IsMouseOver-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                                </Trigger.EnterActions>
                                <!--EXIT fra MouseOver-->
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style with hover effect -->
        <Style x:Key="styleButtonInMessage" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <!--STORYBOARDS-->
                            <Storyboard x:Key="Timeline1">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Timeline2">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>

                        <!--ROOT GRID-->
                        <Grid 
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}"
                            ClipToBounds="True"
                            >

                            <!--BACKGROUND-->
                            <Border Name="background" 
                                       HorizontalAlignment="Stretch" 
                                       VerticalAlignment="Stretch" 
                                       BorderBrush="{TemplateBinding BorderBrush}" 
                                       BorderThickness="{TemplateBinding BorderThickness}"
                                       Background="{TemplateBinding Background}" 
                                       CornerRadius="1"   
                                    SnapsToDevicePixels="True"
                                       />

                            <!--GLOW-->
                            <Border 
                                Opacity="0"
                                SnapsToDevicePixels="True"
                                HorizontalAlignment="Stretch"
                                x:Name="glow" 
                                Margin="1"
                                Width="Auto" 
                                Grid.RowSpan="2" 
                                CornerRadius="1"
                                >
                                <Border.Background>
                                    <RadialGradientBrush>
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1.702" ScaleY="4.243"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="-0.368" Y="-0.152"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#B2FFFFFF" Offset="0"/>
                                        <GradientStop Color="#00FFFFFF" Offset="1"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                            </Border>

                            <!--TEXT-->
                            <ContentPresenter 
                                    x:Name="myContentPresenter" 
                                    Margin="{TemplateBinding Padding}"                                    
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Center"                                 
                                    Content="{TemplateBinding Content}" 
                                    TextBlock.Foreground="{TemplateBinding Foreground}" 
                                    TextBlock.FontFamily="{TemplateBinding FontFamily}" 
                                    TextBlock.FontWeight="{TemplateBinding FontWeight}"                                 
                                    TextBlock.FontSize="{TemplateBinding FontSize}"
                                    />
                        </Grid>

                        <!--TRIGGERS-->
                        <ControlTemplate.Triggers>
                            <!--IsPressed-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="background" Property="Background" Value="#777777"/>
                            </Trigger>
                            <!--IsEnabled false-->
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="background" Property="Background" Value="{StaticResource ResourceKey=BotMessageColor}"/>
                            </Trigger>
                            <Trigger Property="Tag" Value="left">
                                <Setter TargetName="background" Property="CornerRadius" Value="0, 0, 0, 10"/>
                                <Setter TargetName="glow" Property="CornerRadius" Value="0, 0, 0, 10"/>
                            </Trigger>
                            <Trigger Property="Tag" Value="right">
                                <Setter TargetName="background" Property="CornerRadius" Value="0, 0, 10, 0"/>
                                <Setter TargetName="glow" Property="CornerRadius" Value="0, 0, 10, 0"/>
                            </Trigger>
                            <Trigger Property="Tag" Value="middle">
                                <Setter TargetName="background" Property="CornerRadius" Value="0, 0, 10, 10"/>
                                <Setter TargetName="glow" Property="CornerRadius" Value="0, 0, 10, 10"/>
                            </Trigger>
                            <!--IsFocused true-->
                            <!--<Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="background" Property="Fill" Value="White"/>
                                <Setter TargetName="myContentPresenter" Property="TextBlock.Foreground" Value="Black"/>
                            </Trigger>-->
                            <!--IsMouseOver-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                                </Trigger.EnterActions>
                                <!--EXIT fra MouseOver-->
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--#endregion-->

        <!--#region STYLE CheckBox-->

        <Style x:Key="styleCheckBox" TargetType="{x:Type CheckBox}">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Content" Value=""></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <!--GRAY BOX-->
                        <Border 
                            Name="border" 
                            BorderBrush="#202020"
                            BorderThickness="1"
                            CornerRadius="1, 1, 0, 0" 
                            Background="{TemplateBinding Background}"
                            >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <!--WHITE BOX-->
                                <Rectangle 
                                    Name="rect" 
                                    Fill="White"  
                                    Stroke="#202020"
                                    StrokeThickness="1"
                                    RadiusX="1" 
                                    RadiusY="1" 
                                    Margin="3"
                                    />

                                <!--CHECKMARK-->
                                <Viewbox Margin="0, 1, 0, -1">
                                    <Label 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                        Grid.Column="0"
                                        >
                                        <Path x:Name="path" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource AUU_Blue}" Stretch="Uniform"/>
                                        <Label.LayoutTransform>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                        </Label.LayoutTransform>
                                    </Label>
                                </Viewbox>

                                <!--TEXT-->
                                <ContentPresenter 
                                    Grid.Column="1"
                                    TextBlock.FontSize="{TemplateBinding FontSize}" 
                                    TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                    TextBlock.Foreground="{TemplateBinding Foreground}" 
                                    TextBlock.FontWeight="{TemplateBinding FontWeight}"
                                    Margin="0" 
                                    Name="content" 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"
                                    />
                            </Grid>
                        </Border>

                        <!--TRIGGERS-->
                        <ControlTemplate.Triggers>
                            <!--TOP-->
                            <Trigger Property="Tag" Value="top">
                                <Setter Property="CornerRadius"
                                TargetName="border"
                                Value="1, 1, 0, 0" />
                            </Trigger>
                            <!--MIDDLE-->
                            <Trigger Property="Tag" Value="middle">
                                <Setter Property="CornerRadius"
                                TargetName="border"
                                Value="0" />
                            </Trigger>
                            <!--ALL-->
                            <Trigger Property="Tag" Value="all">
                                <Setter Property="CornerRadius"
                                TargetName="border"
                                Value="1" />
                            </Trigger>
                            <!--BOT-->
                            <Trigger Property="Tag" Value="bot">
                                <Setter Property="CornerRadius"
                                TargetName="border"
                                Value="0, 0, 1, 1" />
                            </Trigger>
                            <!--LEFT-->
                            <Trigger Property="Tag" Value="left">
                                <Setter Property="CornerRadius"
                                TargetName="border"
                                Value="0, 1, 1, 0" />
                            </Trigger>
                            <!--RIGHT-->
                            <Trigger Property="Tag" Value="right">
                                <Setter Property="CornerRadius"
                                TargetName="border"
                                Value="1, 0, 0, 1" />
                            </Trigger>
                            <!--BOT LEFT-->
                            <Trigger Property="Tag" Value="botleft">
                                <Setter Property="CornerRadius"
                                TargetName="border"
                                Value="0, 0, 1, 0" />
                            </Trigger>
                            <!--TOP LEFT-->
                            <Trigger Property="Tag" Value="topleft">
                                <Setter Property="CornerRadius"
                                TargetName="border"
                                Value="0, 1, 0, 0" />
                            </Trigger>
                            <!--BOT RIGHT-->
                            <Trigger Property="Tag" Value="botright">
                                <Setter Property="CornerRadius"
                                TargetName="border"
                                Value="0, 0, 0, 1" />
                            </Trigger>
                            <!--TOP RIGHT-->
                            <Trigger Property="Tag" Value="topright">
                                <Setter Property="CornerRadius"
                                TargetName="border"
                                Value="1, 0, 0, 0" />
                            </Trigger>

                            <!--CHECKED TRUE-->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility"
                                TargetName="path"
                                Value="Visible"/>
                            </Trigger>
                            <!--CHECKED FALSE-->
                            <Trigger Property="IsChecked" Value="False">
                                <Setter 
                                    Property="Visibility"
                                    TargetName="path"
                                    Value="Hidden"
                                    />
                            </Trigger>

                            <!--FLOW DIRECTION-->
                            <Trigger Property="FlowDirection" Value="RightToLeft">
                                <Setter Property="RenderTransform" TargetName="path">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="-1" CenterX="5" CenterY="0.5"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->

        <!--#region STYLE COMBOBOX-->

        <!--COMBOBOX ARROW BUTTON-->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" 
                        Grid.Column="1"
                        Grid.ColumnSpan="1"
                        CornerRadius="0,1,1,0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        />
                <Border Grid.Column="0"
                        x:Name="Border2"
                        CornerRadius="1, 0, 0, 1" 
                        Margin="0" 
                        Background="Transparent" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1,1,0,1"
                        />
                <Path x:Name="Arrow"         
                      Grid.Column="1"     
                      Fill="{TemplateBinding Foreground}"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z"
                      />
            </Grid>
        </ControlTemplate>

        <!-- ComboBox TextBox Template-->
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="Transparent" CornerRadius="5" />
        </ControlTemplate>

        <!--STYLE COMBOBOX-->
        <Style x:Key="styleComboBox" TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <!--BACKGROUND-->
                            <Border                                                                 
                                x:Name="Border"
                                CornerRadius="2, 2, 2, 2" 
                                Margin="0" 
                                Background="{TemplateBinding Background}"                                     
                                />

                            <!--COMBOBOX HINT-->
                            <TextBox 
                                x:Name="PART_EditableTextBox"
                                Style="{x:Null}" 
                                Template="{StaticResource ComboBoxTextBox}"                         
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Focusable="False"
                                Margin="0,0,22,1"  
                                TextAlignment="Center"
                                Background="Transparent"           
                                FontFamily="Calibri"                                                      
                                Visibility="Hidden"
                                Text="{TemplateBinding Tag}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                />

                            <!--ARROW INSIDE COMBOBOX-->
                            <ToggleButton 
                                Name="ToggleButton" 
                                Grid.Column="2" 
                                Template="{StaticResource ComboBoxToggleButton}" 
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="false"
                                ClickMode="Press"
                                Background="{TemplateBinding Background}"                                
                                Foreground="{TemplateBinding Foreground}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                />

                            <!--SELECTED ITEM-->
                            <ContentPresenter 
                                x:Name="ContentSite"
                                IsHitTestVisible="False" 
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,0,10,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                TextBlock.FontWeight="{TemplateBinding FontWeight}"
                                TextBlock.FontSize="14"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                />
                            <!--POPUP-->
                            <Popup 
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Slide"
                                TextBlock.FontSize="{TemplateBinding FontSize}"
                                TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                TextBlock.FontWeight="{TemplateBinding FontWeight}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                >
                                <!--DROP DOWN GRID-->
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"                
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                        x:Name="DropDownBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        />

                                    <!--ITEM HOST-->
                                    <ScrollViewer Margin="6" 
                                                  TextBlock.FontSize="14"
                                                  TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                                  TextBlock.FontWeight="{TemplateBinding FontWeight}"
                                                  TextBlock.Foreground="{TemplateBinding Foreground}"
                                                  SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" 
                                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>

                        <!--TRIGGERS-->
                        <ControlTemplate.Triggers>
                            <!--HasItems-->
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <!--Text = ""-->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value="" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            </MultiTrigger>
                            <!--IsEnabled-->
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Transparent"/>
                            </Trigger>
                            <!--IsGrouping-->
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <!--Popup.AllowsTransparency-->
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0,0,1,1"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0"/>
                            </Trigger>
                            <!--IsEditable-->
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!--#endregion-->

        <!--#region OVERRIDE Style-->

        <!-- DATAGRID COLUMN HEADER -->
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="{StaticResource AUU_Blue}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
            <Setter Property="FontFamily" Value="Roboto" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="33" />
            <Setter Property="Cursor" Value="Hand" />
        </Style>

        <!-- SCROLLBAR -->
        <Style TargetType="{x:Type ScrollBar}">
            <Style.Triggers>
                <!--Orientation Horizontal-->
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="30" />
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
                    <Setter Property="Background" Value="{StaticResource AUU_Blue}" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <!--Orientation Vertical-->
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Margin" Value="1"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Width" Value="30"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
                    <Setter Property="Background" Value="{StaticResource AUU_Blue}" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Roboto"/>
        </Style>

        <!--#endregion-->

    </Application.Resources>
</Application>
